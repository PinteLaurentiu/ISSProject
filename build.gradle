buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
    }
}

allprojects {
    group 'ISSProject'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    dependencies {
        compile 'org.springframework:spring-context:5.0.4.RELEASE'
        testImplementation(
                'org.junit.jupiter:junit-jupiter-api:5.1.0'
        )
        testRuntimeOnly(
                'org.junit.jupiter:junit-jupiter-engine:5.1.0'
        )
    }
}

project(":client") {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar {
        baseName = 'client'
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework:spring-web")
        compile("com.fasterxml.jackson.core:jackson-databind")
        compile 'com.jfoenix:jfoenix:8.0.4'
        compile project(":common")

    }
    sourceSets {
        main {
            resources {
                srcDirs "../client/main/resources"
            }
            java {
                srcDirs "../client/main/java"
            }
        }
        test {
            java {
                srcDirs "../client/test/java"
            }
        }
    }
}

project(":server") {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
        compile group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.2.17.Final'
        compile("org.springframework.boot:spring-boot-starter-web")
        compile group: 'javax.mail', name: 'mail', version: '1.4.7'
        compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.1'
        compile project(":common")
    }
    bootJar {
        baseName = 'server'
    }
    sourceSets {
        main {
            resources {
                srcDirs "../server/main/resources"
            }
            java {
                srcDirs "../server/main/java"
            }
        }
        test {
            java {
                srcDirs "../server/test/java"
            }
        }
    }
}

project(":common") {
    sourceSets {
        main {
            resources {
                srcDirs "../common/main/resources"
            }
            java {
                srcDirs "../common/main/java"
            }
        }
        test {
            java {
                srcDirs "../common/test/java"
            }
        }
    }
}
